material normal
{
    texture
    {
       uniformSamplerName = u_diffuseTexture
       uniformUVMatrixName = u_uvMatrix
       inputSamplerIndex = 0
    }

    technique
    {
        pass
        {
            vertexShader = retrieve_render.vert
            fragmentShader = retrieve_render.frag
            renderState
            {
               blend = false
               blendDst = ONE_MINUS_SRC_ALPHA
               blendSrc = SRC_ALPHA
            }
        }
    }
}

material normal_transparent
{
    texture
    {
       uniformSamplerName = u_diffuseTexture
       uniformUVMatrixName = u_uvMatrix
       inputSamplerIndex = 0
    }

    technique
    {
        pass
        {
            vertexShader = retrieve_render.vert
            fragmentShader = retrieve_render.frag
            defines = USE_TRANSPARENT
            renderState
            {
               blend = false
               blendDst = ONE_MINUS_SRC_ALPHA
               blendSrc = SRC_ALPHA
            }
        }
    }
}

material oes
{
    texture
    {
       uniformSamplerName = u_diffuseTexture
       uniformUVMatrixName = u_uvMatrix
       inputSamplerIndex = 0
    }

    technique
    {
        pass
        {
            vertexShader = retrieve_render.vert
            fragmentShader = retrieve_render.frag
            defines = USE_OES_TEXTURE
            renderState
            {
               blend = false
               blendDst = ONE_MINUS_SRC_ALPHA
               blendSrc = SRC_ALPHA
            }
        }
    }
}


material oes_transparent
{
    texture
    {
       uniformSamplerName = u_diffuseTexture
       uniformUVMatrixName = u_uvMatrix
       inputSamplerIndex = 0
    }

    technique
    {
        pass
        {
            vertexShader = retrieve_render.vert
            fragmentShader = retrieve_render.frag
            defines = USE_OES_TEXTURE;USE_TRANSPARENT
            renderState
            {
               blend = false
               blendDst = ONE_MINUS_SRC_ALPHA
               blendSrc = SRC_ALPHA
            }
        }
    }
}