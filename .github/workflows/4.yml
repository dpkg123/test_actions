name: Build-kernel
on:
  workflow_dispatch:

jobs:
  ci-1:
    needs:
      - ci-4
    uses: ./.github/workflows/debian-armel.yml
    secrets: inherit
  ci-2:
   needs:
     - ci-5
   uses: ./.github/workflows/3ds.yml
   secrets: inherit
  ci-3:
   needs: 
     - ci-5
     - ci-4
   uses: ./.github/workflows/devuan-armel.yml
   secrets: inherit

  ci-4:
    needs: ci-5
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    steps:

    - name: "Checkout Repo"
      run: git clone https://github.com/Mangeshrex/rxfetch
    - run: cd rxfetch && sudo bash rxfetch

  ci-7: 
    needs: 
     - ci-1
     - ci-2
     - ci-3
    runs-on: ubuntu-latest
    steps:
    - name: Install neofetch
      run: sudo apt update && sudo apt install -y neofetch
    - run: neofetch
    

  ci-6:
    needs: ci-5
    runs-on: ubuntu-latest
    steps:
    - name: free disk space
      uses: rokibhasansagar/slimhub_actions@main
    - run: sudo apt-get update && sudo apt-get install -y gawk wget git diffstat unzip texinfo gcc build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev python3-subunit mesa-common-dev zstd liblz4-tool file locales bc bison flex
    - name: rm swapfule
      run: |
         export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
         sudo swapoff $SWAP_FILE
         sudo rm $SWAP_FILE
         export ROOT_FREE_KB=$(df --block-size=1024 --output=avail / | tail -1)
         export ROOT_LOOP_KB=$(expr $ROOT_FREE_KB - 1048576)
         export ROOT_LOOP_BYTES=$(expr $ROOT_LOOP_KB \* 1024)
         sudo fallocate -l $ROOT_LOOP_BYTES /root.img
         export ROOT_LOOP_DEVNAME=$(sudo losetup -Pf --show /root.img)
         sudo pvcreate -f $ROOT_LOOP_DEVNAME
         export MNT_FREE_KB=$(df --block-size=1024 --output=avail /mnt | tail -1)
         export MNT_LOOP_KB=$(expr $MNT_FREE_KB - 102400)
         export MNT_LOOP_BYTES=$(expr $MNT_LOOP_KB \* 1024)
         sudo fallocate -l $MNT_LOOP_BYTES /mnt/mnt.img
         export MNT_LOOP_DEVNAME=$(sudo losetup -Pf --show /mnt/mnt.img)
         sudo pvcreate -f $MNT_LOOP_DEVNAME
         sudo vgcreate vgstorage $ROOT_LOOP_DEVNAME $MNT_LOOP_DEVNAME
         sudo lvcreate -n lvstorage -l 100%FREE vgstorage
         export LV_DEVNAME=$(sudo lvscan | awk -F "'" '{print $2}')
         sudo mkfs.btrfs -L combinedisk $LV_DEVNAME
         sudo mount -o compress=zstd $LV_DEVNAME $GITHUB_WORKSPACE
         sudo chown -R runner:runner $GITHUB_WORKSPACE
         mkdir -p $GITHUB_WORKSPACE/tmp && chmod 777 $GITHUB_WORKSPACE/tmp
         sudo cp -rp /tmp/* $GITHUB_WORKSPACE/tmp
         sudo mount -B $GITHUB_WORKSPACE/tmp /tmp && df -hT
    - run: git clone -b kirkstone git://git.yoctoproject.org/poky.git --depth=2
    - name: Build
      run: |
        cd poky
        source oe-init-build-env
        bitbake core-image-sato
    - run: sudo df -h     
    - run: sudo ls poky/build/tmp/deploy/images/qemux86-64
    - run: sudo mkdir out
    - run: sudo cp poky/build/tmp/deploy/images/qemux86-64 -rv out
    - uses: actions/upload-artifact@v4
      with:
        name: poky-image
        path: out/*


  ci-5:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        repository: degdag-mohamed/linux
        fetch-depth: 5
        ref: sm8150-dev
    - name: install dep
      run: |
        sudo apt update
        sudo apt install gcc-aarch64-linux-gnu build-essential git python3-pip bc bison flex binutils-aarch64-linux-gnu -y
    - name: Build
      run: |
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        mkdir -p -v out
        make -j$(nproc) -C $(pwd) O=out raphael_defconfig
        make -j$(nproc) -C $(pwd) O=out
    - name: upload
      uses: actions/upload-artifact@v4
      with:
        name: kernel
        path: out/arch/arm64/boot/
      
  
