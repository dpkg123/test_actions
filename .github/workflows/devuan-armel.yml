name: build devuan armel rootfs

on:

  workflow_dispatch:
  workflow_call:

jobs:
  build-rootfs:
    runs-on: ubuntu-20.04
    steps:

    - name: "Checkout Repo"
      uses: actions/checkout@v4

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
      
    - name: Prepare the environment
      run: |
        sudo apt update 
        sudo apt install qemu-user-static cpio
        
    - name: Install debootstrap
      run: |
        git clone https://git.devuan.org/devuan/debootstrap/
        sudo make -C debootstrap install 

    - name: Build Rootfs
      run: |
        sudo debootstrap --arch=armel --include=icewm,xinit,w3m,htop,neofetch,nethack-console chimaera rootfs

    - name: Configure Rootfs
      run: |
        sudo test -d /etc/resolv.conf || sudo cp /etc/resolv.conf rootfs/etc/ -rv
        sudo chmod 777 -R rootfs/etc/hostname
        cd rootfs && sudo find -name qemu-* -delete
         
    - name: Package Rootfs
      run: |
        cd rootfs
        sudo rm -rf -v var/lib/apt/lists var/cache/apt/archives
        sudo find ./* | sudo cpio -oc > ../rootfs.cpio
        gzip -c ../rootfs.cpio > ../rootfs.cpio.gz

    - name: Upload rootfs.cpio to Artifact
      uses: actions/upload-artifact@v3
      with: 
       name: "3ds-rootfs"
       path: rootfs.cpio.gz

  build-kernel:
    needs: build-rootfs
    runs-on: ubuntu-20.04
    steps:

    - name: "Pull Repo"
      run: git clone https://github.com/linux-3ds/linux --depth=1

    - name: Download Rootfs
      uses: actions/download-artifact@v3
      with:
       name: 3ds-rootfs
       path: linux/
    - name: "Install Packages"
      run: sudo apt-get install -y gcc-arm-linux-gnueabi binutils build-essential git flex bison libssl-dev bc axel libgmp-dev libmpc-dev jq
    - name: Build
      env:
        ARCH: "arm"
        CROSS_COMPILE: "arm-linux-gnueabi-"
      run:  |
        make -C linux nintendo3ds_defconfig all -j4
        mkdir -p -v out 
        cp linux/arch/arm/boot/zImage out -v
        cp linux/arch/arm/boot/dts/nintendo3ds_ctr.dtb out -v
        cp linux/arch/arm/boot/dts/nintendo3ds_ktr.dtb out -v

    - name: Upload rootfs to Artifact
      uses: actions/upload-artifact@v3
      with: 
       name: "3ds-kernel"
       path: out/*
